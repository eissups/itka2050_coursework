## Harjoitustyöraportti

Palauttajat (max 3): N.N,  N.N ja N.N
Pisteitä yhteensä: 3.

## Ongelma 1
Tyyppi:   Polkuinjektio
Sijainti: delete_file()
Kuvaus:

Aliohjelmassa delete_file ei tarkasteta käyttäjän syöttämää polkua
millään tavalla. Tämä mahdollistaa sen, että käyttäjä tuhoaa minkä
tahansa tiedoston, esimerkiksi toisen käyttäjän tiedoston tai vaikkapa
jonkin järjestelmätiedoston.

### Esimerkkihyökkäys: 

1) Kirjaudu sisään käyttäjänä "sam".
2) Tee pyyntö /delete_file?file=../sue/tiedosto.txt
3) Tulos: Suen tiedosto tuhotaan

### Korjaus:

Commit: <>

Korjasin tämän näin... 

Korjaus toimii koska... 

Korjaus estää uuden polkuinjektion syntymisen, sillä uutta reittiä luotaessa...

### Pisteet(3pt)

1pt vian löytämisestä
1pt vian korjaamisesta
1pt vikatyypin eliminoimisesta


## Ongelma 2 

Tyyppi:   Shellinjektio
Sijainti: checkerLoop(queue)
Kuvaus: 

Aliohjelmassa checkerLoop käyttäjän antama tiedostonnimi menee komentotulkkiin ja näin hyökkääjä pääsee halutessaan antamaan omia komentojaan.

### Esimerkkihyökkäys: 

1) Kirjaudu sisään vaikka käyttäjänä "sam".
2) Lisää ja upload esimerkiksi tiedosto "jee.png;ls"
3) Tulos: komentotulkki ottaa kohdan ls komentona eikä kuvan nimenä ja näytetään sisältö

### Korjaus:

Commit: <ongelma2, shellinjektio, korjattu>

Korjasin tämän poistamalla "Shell=true", kohdan ja laittamalla komennot listana, enkä yhtenä merkkijonona. 

Korjaus toimii koska enää ei mennä komentotulkin kautta, ekä käytetä merkkijonoja johon vain liimattaisiin asioita. Tiedostonnimeä ei siis voida ottaa enää komentoina vaan se on vain yksi tiedostonnimi.

Korjaus estää uuden polkuinjektion syntymisen, sillä uutta reittiä luotaessa...

### Pisteet(2pt)

1pt vian löytämisestä
1pt vian korjaamisesta
0pt vikatyypin eliminoimisesta


## Ongelma 3 //Matti löysi, elisa tekee, kesken

Tyyppi:   xss_injektio
Sijainti: checkerLoop
Kuvaus: Voidaan ladata sivulle html yms. tiedostoja(tiedostonimen mukana)

Aliohjelmassa checkerLoop saadaan lisättyä html-tiedostoja, joilla voi esimerkiksi rikkoa sivun käyttöliittymän tai lähetellä mitä vain muita pyyntöjä.

### Esimerkkihyökkäys: 

1) Kirjaudu sisään jonakin käyttäjänä.
2) Riittää, että ihan vain lisää ja uploadaa tyhjän tiedoston, jonka nimeksi on laitettu <h1>HAKKEROINTI</h1><script>alert()</script>.html
3) Tulos: Ei voida enää ladata uusia tiedostoja tai jakaa tiedostoja vaan niiden tilalla lukee HAKKEROINTI<:h1>

### Korjaus:

Commit: <ongelma3, shellinjektio, korjattu>

Korjasin tämän poistamalla "Shell=true", kohdan ja laittamalla komennot listana, enkä yhtenä merkkijonona. 

Korjaus toimii koska enää ei mennä komentotulkin kautta, ekä käytetä merkkijonoja johon vain liimattaisiin asioita. Tiedostonnimeä ei siis voida ottaa enää komentoina vaan se on vain yksi tiedostonnimi.

Korjaus estää uuden polkuinjektion syntymisen, sillä uutta reittiä luotaessa...

### Pisteet(2pt)

1pt vian löytämisestä
1pt vian korjaamisesta
0pt vikatyypin eliminoimisesta


## Ongelma 4 //Matti löysi, lopullinen korjaus puuttuu vielä?

Tyyppi:   polkuinjektio
Sijainti: login()
Kuvaus: Voidaan kirjautua sisään millä nimellä tahansa, sekä urkkia tietoa.

Aliohjelma tarkistaa users -taulukosta käyttänimet, mutta päästää läpi kaikki sellaiset käyttäjänimet, joita ei ole listattu taulukkoon.

### Esimerkkihyökkäys: 

1) Kirjaudu sisään jonakin käyttäjänä.
2) Lisää kuvia palveluun
3) Log out käyttäjällä
4) Hyökkääjä päättää syöttää webselaimen url kenttään: http://localhost:5000/login?user=ihanmikavaan
5) Tulos: Hyökkääjä pääsee käsiksi jaettuihin tiedostoihin.

### Korjaus:
Korjattu lisäämällä muuttamalla ehto muodosta 'if username:' -> 'if username in users:'. Eli aikaisemmin 'if username' palautti aina truen. Nyt se tarkistaa onko se username oikeasti siellä 'users' -taulukossa. MUTTA tästä syntyy uusi ongelma, joka pitää korjata erikseen, eli nyt voidaan käydä läpi käyttäjänimiä, joilla on käyttäjä palvelussa. Jos löytyy oikea käyttäjänimi, niin sivusto viestii, että 'login failed' eli ks. ongelma 6.

Commit: <ongelma4, polkuinjektio, korjattu>


## Ongelma 5 //Matti löysi, korjaus puuttuu vielä

Tyyppi:   polkuinjektio
Sijainti: login()
Kuvaus: Voidaan kirjautua sisään millä nimellä tahansa, sekä syöttää kuvia palveluun.

Aliohjelma tarkistaa users -taulukosta käyttänimet, mutta päästää läpi kaikki sellaiset käyttäjänimet, joita ei ole listattu taulukkoon.

### Esimerkkihyökkäys: 

1) Hyökkääjä päättää syöttää webselaimen url kenttään: http://localhost:5000/login?user=ihanmikavaan.
2) Hyökkääjä alkaa latailemaan tietostoja palveluun.
2) Tulos: Hyökkääjä pääsee lataamaan palveluun kuvia, ja voi pahimmassa tapauksessa tukkia koko roskan.

### Korjaus:
Ongelman 4 korjaus korjaa tämänkin ellei jäänyt jotain reikää johonkin. Eli: "Korjattu lisäämällä muuttamalla ehto muodosta 'if username:' -> 'if username in users:'. Eli aikaisemmin 'if username' palautti aina truen. Nyt se tarkistaa onko se username oikeasti siellä 'users' -taulukossa. MUTTA tästä syntyy uusi ongelma, joka pitää korjata erikseen, eli nyt voidaan käydä läpi käyttäjänimiä, joilla on käyttäjä palvelussa. Jos löytyy oikea käyttäjänimi, niin sivusto viestii, että 'login failed' eli ks. ongelma 6."

Commit: <ongelma5, polkuinjektio, korjattu>


## Ongelma 6 //Matti löysi, lopullinen korjaus puuttuu vielä

Tyyppi:   käyttäjänimet vaarassa löytyä
Sijainti: login()
Kuvaus: Hyökkääjä voi arvailla ohjelmassa olevat käyttäjänimet

Aliohjelma tarkistaa users -taulukosta käyttänimet, jos käyttäjä löytyy listasta, mutta salasana on väärin tulostetaan webselaimen ikkunaan: "Login failed!". Jos käyttäjänimeä ei ole users-taulukossa, niin tulostetaan webselaimeen sama login ruutu kuin alussa on.

### Esimerkkihyökkäys: 

1) Hyökkääjä kokeilee urliin käyttäjänimiä esim: http://localhost:5000/login?user=lion
2) Vastauksena tulee html sivu, jossa kerrotaan, että login failed
3) Hyökkääjä arvaa, että tälläinen käyttjänimi on järjestelmässä!
4) Tulos: Hyökkääjällä on tiedossa karkeasti sanottuna puolet tunnus:salasana -parista.

### Korjaus:


Commit: <ongelma6, polkuinjektio, korjattu>


...
